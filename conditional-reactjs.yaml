apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: conditional-ui-example
  title: Conditional UI Example
  description: A template demonstrating conditional UI elements.
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Application Type
      description: Choose the type of application to create
      type: string
      required: true
      enum:
        - frontend
        - backend
        - fullstack
      ui:
        field: select
    - title: Frontend Framework
      description: Select a frontend framework (Visible only if Application Type is 'frontend' or 'fullstack')
      type: string
      enum:
        - React
        - Angular
        - Vue
      required: false
      ui:
        conditional:
          when: applicationType
          is: 
            - frontend
            - fullstack
    - title: Backend Framework
      description: Select a backend framework (Visible only if Application Type is 'backend' or 'fullstack')
      type: string
      enum:
        - Spring Boot
        - Node.js
        - Django
      required: false
      ui:
        conditional:
          when: applicationType
          is: 
            - backend
            - fullstack
  steps:
    - id: fetch-repository
      name: Fetch Repository Template
      action: fetch:template
      input:
        url: https://github.com/my-org/my-repo-template
        targetPath: ./template
        values:
          appType: ${{ parameters.applicationType }}
          frontendFramework: ${{ parameters.frontendFramework }}
          backendFramework: ${{ parameters.backendFramework }}
    - id: create-repo
      name: Create GitHub Repository
      action: github:repo:create
      input:
        owner: my-org
        repo: ${{ parameters.applicationType }}-app
    - id: publish-code
      name: Publish Source Code to Repository
      action: publish:github
      input:
        repoUrl: ${{ steps.create-repo.output.repoUrl }}
        repoContents: ./template
    - id: setup-jenkins
      name: Setup Jenkins Multistage Build Job
      action: jenkins:job:trigger
      input:
        jobName: CI_PORTAL/create_multibranch_job
        parameters:
          repoUrl: ${{ steps.create-repo.output.repoUrl }}
    - id: setup-sonar
      name: Setup SonarQube Project
      action: sonarqube:project:create
      input:
        projectName: ${{ parameters.applicationType }}-project
        permissions:
          - group: developers
            permission: read
          - group: admins
            permission: write
